networks:
  reverse-proxy:
    external: true

services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:v1.124.2@sha256:c14dccad0611635668abf98f17ce87c3badcc17bb979c53ef96dc49e934ebbc8
    container_name: immich-server
    cpus: 8
    mem_limit: 8192m
    restart: unless-stopped
    expose: 
      - 2283
    networks:
      - reverse-proxy
    depends_on:
      - immich-postgres
      - immich-redis
    environment:
      - DB_HOSTNAME=immich-postgres
      - REDIS_HOSTNAME=immich-redis
    volumes:
      - /mnt/raid/home-server/immich/upload:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.immich.entrypoints=websecure
      - traefik.http.routers.immich.rule=Host(`immich.${DOMAIN_NAME}`)
      - traefik.http.routers.immich.middlewares=chain-no-auth@file
      - traefik.http.services.immich.loadbalancer.server.port=2283
  
  immich-machine-learning:
    container_name: immich-machine-learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    image: ghcr.io/immich-app/immich-machine-learning:v1.124.2@sha256:a134652b47278edfdac3187d61558e78679be39c810536193a41e9e0d894c5f4
    restart: unless-stopped
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    networks:
      - reverse-proxy
    volumes:
      - ~/home-server/immich/machine-learning/model-cache:/cache
    environment:
      - NODE_ENV=production
    healthcheck:
      disable: false

  immich-redis:
    container_name: immich-redis
    image: docker.io/redis:7.4.2-alpine@sha256:1bf97f21f01b0e7bd4b7b34a26d3b9d8086e41e70c10f262e8a9e0b49b5116a0
    restart: unless-stopped
    networks:
      - reverse-proxy
    environment:
      - REDIS_HOSTNAME=immich-redis
    healthcheck:
      test: redis-cli ping || exit 1

  immich-postgres:
    container_name: immich-postgres
    image: docker.io/tensorchord/pgvecto-rs:pg16-v0.3.0@sha256:9722631d44e76d46a8301859c46294f2c2c6a2f95e8706b55b4d654d6eaeafba
    restart: unless-stopped
    networks:
      - reverse-proxy
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ~/home-server/immich/postgres:/var/lib/postgresql/data
    healthcheck:
      disable: true
      test: |
        pg_isready --dbname='${DB_DATABASE_NAME}' \
          --username='${DB_USERNAME}' || exit 1; \
          Chksum="$$(psql --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' --tuples-only --no-align \
          --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; \
          echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 1m
      start_interval: 30s
      start_period: 30s
    command:
      [
        'postgres',
        '-c',
        'shared_preload_libraries=vectors.so',
        '-c',
        'search_path="$$user", public, vectors',
        '-c',
        'logging_collector=on',
        '-c',
        'max_wal_size=2GB',
        '-c',
        'shared_buffers=512MB',
        '-c',
        'wal_compression=on',
      ]
