networks:
  reverse-proxy:
    external: true

services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:v1.143.1
    container_name: immich-server
    cpus: 8
    mem_limit: 8192m
    restart: unless-stopped
    expose:
      - 2283
    networks:
      - reverse-proxy
    depends_on:
      immich-postgres:
        condition: service_healthy
        restart: true
      immich-redis:
        condition: service_healthy
        restart: true
    volumes:
      - /mnt/raid/home-server/immich/upload:/usr/src/app/upload:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      DB_HOSTNAME: immich-postgres
      REDIS_HOSTNAME: immich-redis
    labels:
      traefik.enable: true
      traefik.http.routers.immich.entrypoints: websecure
      traefik.http.routers.immich.rule: Host(`immich.${DOMAIN_NAME}`)
      traefik.http.routers.immich.middlewares: chain-no-auth@file
      traefik.http.services.immich.loadbalancer.server.port: 2283

  immich-machine-learning:
    container_name: immich-machine-learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    image: ghcr.io/immich-app/immich-machine-learning:v1.142.1
    restart: unless-stopped
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    networks:
      - reverse-proxy
    healthcheck:
      disable: true
    volumes:
      - ~/home-server/immich/machine-learning/model-cache:/cache:rw
    environment:
      NODE_ENV: production

  immich-redis:
    container_name: immich-redis
    image: docker.io/library/redis:8.2.1-alpine
    restart: unless-stopped
    networks:
      - reverse-proxy
    healthcheck:
      test: redis-cli ping || exit 1
    environment:
      REDIS_HOSTNAME: immich-redis

  immich-postgres:
    container_name: immich-postgres
    image: docker.io/tensorchord/pgvecto-rs:pg16-v0.3.0
    restart: unless-stopped
    networks:
      - reverse-proxy
    command:
      [
        "postgres",
        "-c",
        "shared_preload_libraries=vectors.so",
        "-c",
        'search_path="$$user", public, vectors',
        "-c",
        "logging_collector=on",
        "-c",
        "max_wal_size=2GB",
        "-c",
        "shared_buffers=512MB",
        "-c",
        "wal_compression=on",
      ]
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ~/home-server/immich/postgres:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: "--data-checksums"
    healthcheck:
      disable: true
      test: |
        pg_isready --dbname='${DB_DATABASE_NAME}' \
          --username='${DB_USERNAME}' || exit 1; \
          Chksum="$$(psql --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' --tuples-only --no-align \
          --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; \
          echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 1m
      start_interval: 30s
      start_period: 30s
