networks:
  reverse-proxy:
    external: true

services:
  airtrail:
    container_name: airtrail
    image: docker.io/johly/airtrail:v3.1.1
    restart: unless-stopped
    cpus: 1
    mem_limit: 1024m
    expose:
      - 3000
    networks:
      - reverse-proxy
    environment:
      DB_URL: postgres://user:password@airtrail-db:5432/airtrail
    labels:
      traefik.enable: true
      traefik.http.routers.airtrail.entrypoints: websecure
      traefik.http.routers.airtrail.rule: Host(`airtrail.${DOMAIN_NAME}`)
      traefik.http.routers.airtrail.middlewares: chain-authentik@file
      traefik.http.services.airtrail.loadbalancer.server.port: 3000
    depends_on:
      airtrail-db:
        condition: service_healthy
        restart: true

  airtrail-db:
    image: docker.io/library/postgres:17.6-alpine
    container_name: airtrail-db
    restart: unless-stopped
    cpus: 1
    mem_limit: 1024m
    expose:
      - 5432
    networks:
      - reverse-proxy
    environment:
      POSTGRES_DB: airtrail
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ~/home-server/airtrail-db:/var/lib/postgresql/data:rw
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U user -d airtrail']
      interval: 5s
      timeout: 5s
      retries: 5
