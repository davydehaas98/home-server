networks:
  reverse-proxy:
    driver: bridge
    name: reverse-proxy

services:
  traefik:
    image: docker.io/traefik:v3.4.3
    container_name: traefik
    restart: unless-stopped
    cpus: 2
    mem_limit: 4096m
    # user: ${UID}:${GID}
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
      - 8080:8080
      - 3179:3179/tcp
      - 3179:3179/udp
    networks:
      - reverse-proxy
    command:
      - --certificatesResolver.dns-resolver-cloudflare.acme.email=${CLOUDFLARE_EMAIL}
      - --providers.docker.defaultrule=Host(`{{ index .Labels "com.docker.compose.service" }}.${DOMAIN_NAME}`)
    volumes:
      - ~/home-server/traefik/letsencrypt:/letsencrypt:rw
      - ~/home-server/traefik:/etc/traefik:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=${TZ}
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL:?error}
      - CF_API_KEY=${CLOUDFLARE_API_KEY:?error}
    healthcheck:
      disable: true
      test: ["CMD", "curl", "--fail", "http://traefik:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
      start_interval: 5s
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)
      - traefik.http.routers.traefik.middlewares=chain-authelia@file
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls.domains[0].main=${DOMAIN_NAME}
      - traefik.http.routers.traefik.tls.domains[0].sans=*.${DOMAIN_NAME}
      - traefik.http.services.traefik.loadbalancer.server.port=8080
